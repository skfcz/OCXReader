# Configure OCCT libraries to link with
macro (target_link_occt_libraries target)
  foreach (LIB ${OpenCASCADE_LIBRARIES})
    if (WIN32)
      if (${CMAKE_BUILD_TYPE} STREQUAL "Debug")
        set(DEBUG_SUFFIX "d")
      endif ()
      if (EXISTS ${OpenCASCADE_LIBRARY_DIR}${DEBUG_SUFFIX}/${LIB}.lib)
        set(occt_lib_dir ${OpenCASCADE_LIBRARY_DIR}${DEBUG_SUFFIX}/${LIB}.lib)
        # message(STATUS "Adding ${occt_lib_dir}")

        target_link_libraries(${target} debug ${occt_lib_dir})
        target_link_libraries(${target} optimized ${occt_lib_dir})
      else ()
        message(FATAL_ERROR "Library ${LIB} not found in ${OpenCASCADE_LIBRARY_DIR}${DEBUG_SUFFIX}")
      endif ()
    elseif (APPLE)
      if (EXISTS ${OpenCASCADE_LIBRARY_DIR}/lib${LIB}.dylib)
        set(occt_lib_dir ${OpenCASCADE_LIBRARY_DIR}/lib${LIB}.dylib)
        # message(STATUS "Adding ${occt_lib_dir}")

        target_link_libraries(${target} debug ${occt_lib_dir})
        target_link_libraries(${target} optimized ${occt_lib_dir})
      else ()
        message(FATAL_ERROR "Library lib${LIB} not found in ${OpenCASCADE_LIBRARY_DIR}")
      endif ()
    elseif (UNIX)
      if (EXISTS ${OpenCASCADE_LIBRARY_DIR}/lib${LIB}.so)
        set(occt_lib_dir ${OpenCASCADE_LIBRARY_DIR}/lib${LIB}.so)
        # message(STATUS "Adding ${occt_lib_dir}")

        target_link_libraries(${target} debug ${occt_lib_dir})
        target_link_libraries(${target} optimized ${occt_lib_dir})
      else ()
        message(FATAL_ERROR "Library lib${LIB} not found in ${OpenCASCADE_LIBRARY_DIR}")
      endif ()
    endif ()
  endforeach ()
endmacro ()
